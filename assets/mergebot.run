#!/bin/bash
set -euo pipefail

# A function to forward the signal received by the script to the watchdog process.
forward_signal() {
  local signal=$1
  echo "-- Forwarding signal $signal to husky..."
  kill -s "$signal" "$husky_pid" 2>/dev/null || true
  wait "$husky_pid" 2>/dev/null || true
  exit 0 # Exit indicating signal handling was graceful
}

# Function to handle unexpected errors.
handle_error() {
  echo "-- Error: mergebot failed to start. Terminating husky..."
  kill "$husky_pid" 2>/dev/null || true
  exit 1
}

# Setup traps for SIGINT and SIGTERM signals.
trap 'forward_signal SIGINT' SIGINT

# Trap ERR signal to handle errors.
trap 'handle_error' ERR

script_dir="$(dirname "$0")"
MB_BIN_DIR=$("$script_dir/setup.sh" --dir-only 2>/dev/null)
if [ -z "$MB_BIN_DIR" ]; then
  echo "Error: mergebot binary directory not found."
  exit 1
fi
echo "-- mergebot dir: $(realpath "$MB_BIN_DIR")"

# run watchdog monitor to do readiness check
echo "-- $MB_BIN_DIR/husky: starting..."
$MB_BIN_DIR/husky &
husky_pid=$!

# Run mergebot with LD_LIBRARY_PATH modified. Use 'if' condition to check execution status.
if ! LD_LIBRARY_PATH="$MB_BIN_DIR:$MB_BIN_DIR/dylib" "$MB_BIN_DIR/mergebot"; then
  handle_error
fi
